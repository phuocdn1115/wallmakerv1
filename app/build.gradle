plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'realm-android'
    id 'androidx.navigation.safeargs'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("$System.env.HOME/appconfig/walla/keystore/keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

if (project.file(keystorePropertiesFile).exists()) {
    // Load your keystore.properties file into the keystoreProperties object.
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} else {
    keystoreProperties.setProperty("keyAlias", "unknown")
    keystoreProperties.setProperty("keyPassword", "unknown")
    keystoreProperties.setProperty("storeFile", "unknown")
    keystoreProperties.setProperty("storePassword", "unknown")
}

android {
    compileSdk rootProject.ext.androidVersion

    defaultConfig {
        applicationId "com.x10.photo.maker"
        minSdk rootProject.ext.minSupportSDKVersion
        targetSdk rootProject.ext.androidVersion
        versionName "1.0.2"
        versionCode 7
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        archivesBaseName = "alo-wallmaker-${versionName}-${versionCode}-${new Date().format('yyyyMMdd')}"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    aaptOptions {
        cruncherEnabled = false
    }

    buildTypes {
        debug {
            try {
                buildConfigField "String", "COUNTRY_CODE_URL", "\"https://ipinfo.io/country\""
                buildConfigField "String", "PREFIX_FIREBASE_REMOTE_CONFIG", "\"alo_wall_maker_dev_\""
                buildConfigField "String", "API_URL", "\"https://makerdev.alo.vn/api/\""
                buildConfigField "String", "GLOBAL_API_URL", "\"https://makerdev.alo.vn/api/\""

                buildConfigField "String", "ADS_NATIVE_HOME_ID", "\"ca-app-pub-3940256099942544/2247696110\""
                buildConfigField "String", "ADS_NATIVE_IN_FRAME_ID", "\"ca-app-pub-3940256099942544/2247696110\""
                buildConfigField "String", "ADS_NATIVE_SET_SUCCESS_ID", "\"ca-app-pub-3940256099942544/2247696110\""
                buildConfigField "String", "ADS_OPEN_APP_ID", "\"ca-app-pub-3940256099942544/3419835294\""
                buildConfigField "String", "ADS_REWARDED_IN_PREVIEW_ID", "\"ca-app-pub-3940256099942544/5224354917\""
                buildConfigField "String", "ADS_BANNER_ID", "\"ca-app-pub-3940256099942544/6300978111\""
                buildConfigField "String", "GLOBAL_STORAGE_VIDEO_URL", "\"https://laptop.ahaa.com.vn/video7storage/\""
                buildConfigField "String", "POLICY_URL", "\"https://sites.google.com/view/wallmakerpolicy/policy\""
                buildConfigField "String", "DOMAIN_DYNAMIC_LINK", "\"https://wallpapermaker.page.link\""
                debuggable true
            }
            catch (e) {
                buildConfigField "String", "COUNTRY_CODE_URL", "\"https://ipinfo.io/country\""
                throw e
            }
        }
        release {
            buildConfigField "String", "COUNTRY_CODE_URL", "\"https://ipinfo.io/country\""
            buildConfigField "String", "PREFIX_FIREBASE_REMOTE_CONFIG", "\"alo_wall_maker_\""
            buildConfigField "String", "API_URL", "\"https://makerprod1us.alo.vn/api/,https://makerprod1sg.alo.vn/api/\""
            buildConfigField "String", "GLOBAL_API_URL", "\"https://makerprod1us.alo.vn/api/\""

            buildConfigField "String", "ADS_NATIVE_HOME_ID", "\"ca-app-pub-1838653768193388/6202119683\""
            buildConfigField "String", "ADS_NATIVE_IN_FRAME_ID", "\"ca-app-pub-1838653768193388/4943774685\""
            buildConfigField "String", "ADS_NATIVE_SET_SUCCESS_ID", "\"ca-app-pub-1838653768193388/8528900121\""
            buildConfigField "String", "ADS_REWARDED_IN_PREVIEW_ID", "\"ca-app-pub-1838653768193388/7106903594\""
            buildConfigField "String", "ADS_OPEN_APP_ID", "\"ca-app-pub-1838653768193388/5795474314\""
            buildConfigField "String", "ADS_BANNER_ID", "\"ca-app-pub-1838653768193388/9758221313\""

            buildConfigField "String", "GLOBAL_STORAGE_VIDEO_URL", "\"https://www.sgvideostore.tplivewallpaper.xyz/video7storage/\""
            buildConfigField "String", "POLICY_URL", "\"https://sites.google.com/view/wallmakerpolicy/policy\""
            buildConfigField "String", "DOMAIN_DYNAMIC_LINK", "\"https://wallpapermaker.page.link\""
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled = true
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation project(':wall-exoplayer')
    implementation project(':maker-tracking')
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"

    // Material
    implementation "com.google.android.material:material:$material_version"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"

    // Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Push down view when click
    implementation "com.github.thekhaeng:pushdown-anim-click:$push_down_view_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp-dnsoverhttps:4.9.0"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"

    // Image circle
    implementation "de.hdodenhof:circleimageview:$circle_imageview_version"

    // Checking install app
    implementation "com.android.installreferrer:installreferrer:$installreferrer_version"

    // Firebase
    implementation platform("com.google.firebase:firebase-bom:$firebase_bom_version")
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-config-ktx'
    implementation 'com.google.firebase:firebase-dynamic-links-ktx'

    // Blur view
    implementation "com.github.Dimezis:BlurView:version-$blur_view_version"

    // Flexbox layout manager
    implementation "com.google.android:flexbox:$flexbox_version"

    // Loading UI
    implementation "com.facebook.shimmer:shimmer:$shimmer_facebook_version"

    // Until code
    implementation "com.blankj:utilcode:$util_code"

    //Refresh - loader
    implementation "io.github.scwang90:refresh-layout-kernel:$refresh_loader_version"
    implementation "io.github.scwang90:refresh-footer-classics:$refresh_loader_version"

    //Event bus
    implementation "org.greenrobot:eventbus:$eventbus_version"

    //Start up
    implementation "androidx.startup:startup-runtime:$start_up_version"

    //Work Manager
    implementation "androidx.work:work-runtime-ktx:$work_manager_version"

    // Google ADS
    implementation "com.google.android.gms:play-services-ads:$google_ads_view_version"

    // Crop Image
    implementation "com.github.yalantis:ucrop:$ucrop_version"

    // Photo movie
    implementation project(':render-movie')

    //Exoplayer
    implementation "com.google.android.exoplayer:exoplayer:$exoplayer_version"

    //Set Keyboard Visibility
    implementation("net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:3.0.0-RC3")
}